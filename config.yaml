# OpenDataHub Gateway API Migration Configuration
# This file defines project-wide settings for the security 2.0 migration

# GitHub Configuration
github:
  # Organization where all forks will be created
  fork_org: "jctanner-opendatahub-io"
  
  # Branch name to use across all forked repositories for this project
  branch_name: "gateway-api-migration-mvp-1"
  
  # Base branch to create migration branches from (usually main or master)
  base_branch: "main"

# Additional repositories for migration work
# These are repositories outside the manifest dependencies that you want to work with
# Format: "original_org/repo_name" - will be forked to your fork_org
additional_repositories:
  - "resoluteCoder/opendatahub-operator:auth-proxy-envoy"
  - "openshift/oauth-proxy"
  - "opendatahub-io/kube-auth-proxy"

# Container Registry Configuration
registry:
  # Custom registry URL for built images
  url: "registry.tannerjc.net"
  
  # Namespace/organization within the registry
  namespace: "odh-security-2.0"
  
  # Default image tag
  tag: "latest"

# Build Configuration
# Default settings for the build-operator command
build:
  # Use local checkouts for manifest sources instead of cloning
  local: true
  
  # Use feature branch from config.yaml instead of main branch
  use_branch: true
  
  # Build container image instead of binary
  image: true
  
  # Use custom registry settings from config.yaml
  custom_registry: true
  
  # Only fetch manifests, do not build binary or image
  manifests_only: false

# Migration settings
migration:
  # Whether to automatically create branches after forking
  auto_create_branch: true
  
  # Whether to set up upstream remotes automatically
  setup_upstream: true
  
  # Commit message template for migration changes
  commit_message_template: "Migrate to Gateway API: {description}"
  
  # Pull request title template
  pr_title_template: "Gateway API Migration: {repository}"

# Deployment Configuration
# Settings for OpenDataHub deployment including DSCI and DSC resources
deployment:
  # Default namespace for OpenDataHub components
  application_namespace: "opendatahub"
  
  # Timeout for waiting on resources to be ready (in seconds)
  wait_timeout: 300
  
  # DSC Initialization configuration
  dsci:
    name: "default-dsci"
    spec:
      # monitoring:
      #   managementState: "Managed"  # Uncomment to enable monitoring
      #   namespace: "opendatahub"
      applicationsNamespace: "opendatahub"
      #networking:
      #  mode: "gateway-api"  # "standard" or "gateway-api"
      serviceMesh:
        managementState: "Removed"
      trustedCABundle:
        managementState: "Managed"
        customCABundle: ""
  
  # Data Science Cluster configuration
  dsc:
    name: "default-dsc"
    spec:
      components:
        # codeflare:
        #   managementState: "Managed"
        dashboard:
          managementState: "Managed"
        # datasciencepipelines:
        #   managementState: "Managed"
        # kserve:
        #   managementState: "Managed"
        #   nim:
        #     managementState: "Managed"
        #   rawDeploymentServiceConfig: "Headed"
        #   serving:
        #     ingressGateway:
        #       certificate:
        #         type: "OpenshiftDefaultIngress"
        #     name: "knative-serving"
        #     managementState: "Managed"
        # modelmeshserving:
        #   managementState: "Managed"
        # kueue:
        #   managementState: "Managed"
        # trainingoperator:
        #   managementState: "Managed"
        # ray:
        #   managementState: "Managed"
        #workbenches:
        #  managementState: "Managed"
        # trustyai:
        #   managementState: "Managed"
        # modelregistry:
        #   managementState: "Managed"
        #   registriesNamespace: "odh-model-registries"
        # feastoperator:
        #   managementState: "Managed"
        # llamastackoperator:
        #   managementState: "Removed"

# Project metadata
project:
  name: "OpenDataHub Gateway API Migration"
  version: "2.0"
  description: "Migration of OpenDataHub networking from current implementation to Gateway API" 
